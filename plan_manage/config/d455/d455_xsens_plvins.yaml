%YAML:1.0

#common parameters
imu_topic: "/imu/data"
image_topic: "/camera/color/image_raw"
output_path: "/home/nx/Trajactory/"         # vins outputs will be wrttento vins_folder_path + output_path

#camera calibration 
model_type: PINHOLE
camera_name: camera
image_width: 640
image_height: 480
distortion_parameters:
   k1: -0.049632616745125396
   k2: 0.04351250366980144
   p1:  -0.0012067173013466475
   p2:  0.0002251868971102771
projection_parameters:
   fx: 388.159724027401
   fy: 388.0358581588346
   cx: 324.309950591835
   cy: 239.67973876919973
# Extrinsic parameter between IMU and Camera.
estimate_extrinsic: 1   # 0  Have an accurate extrinsic parameters. We will trust the following imu^R_cam, imu^T_cam, don't change it.
                        # 1  Have an initial guess about extrinsic parameters. We will optimize around your initial guess.
                        # 2  Don't know anything about extrinsic parameters. You don't need to give R,T. We will try to calibrate it. Do some rotation movement at beginning. 
ex_calib_result_path: "/config/euroc/ex_calib_result.yaml"  # If you choose 1 or 2, the extrinsic calibration result will be written vins_folder_path + ex_calib_result_path.                        
#If you choose 0 or 1, you should write down the following matrix.
#Rotation from camera frame to imu frame, imu^R_cam
extrinsicRotation: !!opencv-matrix
   rows: 3
   cols: 3
   dt: d
   data:  [ -9.6888584743417550e-03, 7.8965168946147957e-01,  6.1347887930400302e-01, 
            9.9958099317661109e-01,  2.4382975784096095e-02, -1.5598351578682237e-02,
            -2.7275705335044573e-02, 6.1307069724669083e-01, -7.8955706321705010e-01 ]

      #  [-0.01301917,  0.99973908, -0.01876889, 
      #       0.78922203,  0.02179956,  0.61372092, 
      #       0.61396994, -0.00682268, -0.78929992]

#Translation from camera frame to imu frame, imu^T_cam
extrinsicTranslation: !!opencv-matrix
   rows: 3
   cols: 1
   dt: d
   data: [ 9.6808006373465039e-02, 5.4346078535056956e-02, -2.6601708131782528e-02 ]

#feature traker paprameters
max_cnt: 150            # max feature number in feature tracking
min_dist: 30            # min distance between two features 
freq: 10                # frequence (Hz) of publish tracking result. At least 10Hz for good estimation. If set 0, the frequence will be same as raw image 
F_threshold: 1.0        # ransac threshold (pixel)
show_track: 0           # publish tracking image as topic
equalize: 0             # if image is too dark or light, trun on equalize to find enough features
fisheye: 0              # if using fisheye, trun on it. A circle mask will be loaded to remove edge noisy points

#optimization parameters
max_solver_time: 0.04  # max solver itration time (ms), to guarantee real time
max_num_iterations: 10   # max solver itrations, to guarantee real time
keyframe_parallax: 10.0 # keyframe selection threshold (pixel)

#imu parameters       The more accurate parameters you provide, the better performance
# acc_n: 0.2          # accelerometer measurement noise standard deviation. #0.2
# gyr_n: 0.02         # gyroscope measurement noise standard deviation.     #0.05
# acc_w: 0.0002         # accelerometer bias random work noise standard deviation.  #0.02
# gyr_w: 2.0e-5       # gyroscope bias random work noise standard deviation.     #4.0e-5
# g_norm: 9.81007     # gravity magnitude
acc_n: 0.0007853161973805388           # accelerometer measurement noise standard deviation. #0.2   0.04
gyr_n: 0.00015641921981365443         # gyroscope measurement noise standard deviation.     #0.05  0.004
acc_w: 0.0003206465960188917         # accelerometer bias random work noise standard deviation.  #0.02
gyr_w: 5.837129494278657e-05       # gyroscope bias random work noise standard deviation.     #4.0e-5
g_norm: 9.81007     # gravity magnitude

#unsynchronization parameters
estimate_td: 1                      # online estimate time offset between camera and imu
td: -0.007374217568717116                     # initial value of time offset. unit: s. readed image clock + td = real image clock (IMU clock)


#loop closure parameters
loop_closure: 1   #if you want to use loop closure to minimize the drift, set loop_closure true and give your brief pattern file path and vocabulary file path accordingly;
                     #also give the camera calibration file same as feature_tracker node
load_previous_pose_graph: 0 
fast_relocalization: 0 
pose_graph_save_path: "/home/nx/Trajactory/graph/" # save and load path


pattern_file: "/support_files/brief_pattern.yml"
voc_file: "/support_files/brief_k10L6.bin"
min_loop_num: 25


